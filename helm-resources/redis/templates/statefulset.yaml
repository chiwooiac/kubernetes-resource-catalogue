{{- $fullname := (include "redis.fullname" .) -}}
{{- $serviceName := print $fullname "-svc" -}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullname }}
  labels:
    {{- include "redis.labels" . | nindent 4 }}
spec:
  serviceName: {{ $serviceName }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "redis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "redis.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "redis.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: config
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: [ "sh", "-c" ]
          args:
            - |
              cp /tmp/redis/redis.conf /etc/redis/redis.conf
              
              echo "finding master..."
              MASTER_FDQN=`hostname  -f | sed -e 's/{{ $fullname }}-[0-9]\./{{ $fullname }}-0./'`
              if [ "$(redis-cli -h sentinel -p 5000 ping)" != "PONG" ]; then
                echo "master not found, defaulting to {{ $fullname }}-0"
              
                if [ "$(hostname)" == "{{ $fullname }}-0" ]; then
                  echo "this is {{ $fullname }}-0, not updating config..."
                else
                  echo "updating redis.conf..."
                  echo "slaveof $MASTER_FDQN 6379" >> /etc/redis/redis.conf
                fi
              else
                echo "sentinel found, finding master"
                MASTER="$(redis-cli -h sentinel -p 5000 sentinel get-master-addr-by-name mymaster | grep -E '(^{{ $fullname }}-\d{1,})|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})')"
                echo "master found : $MASTER, updating redis.conf"
                echo "slaveof $MASTER 6379" >> /etc/redis/redis.conf
              fi
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis/
            - name: config-cm
              mountPath: /tmp/redis/
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          command: [ "redis-server" ]
          args:
            - "/etc/redis/redis.conf"
          ports:
            - containerPort: 9092
              protocol: TCP
              name: redis
          env:
            - name: REDIS_SERVICE_NAME
              value: {{ $serviceName }}
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis/
            - name: redis-pvc
              mountPath: "/data/redis"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: redis-config
          emptyDir: {}
        - name: config-cm
          configMap:
            name: {{ include "redis.cm-name" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: redis-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ include "redis.storageClassName" . }}
        resources:
          requests:
            storage: {{ .Values.volume.storage }}
