---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mysql.fullname" . }}
  labels:
    {{- include "mysql.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "mysql.fullname" . }}-svc
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mysql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mysql.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mysql.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - 'sh'
          args:
            - '-c'
            - |
              chmod a+x /usr/local/bin/docker-entrypoint.sh /usr/local/bin/init.sh
              bash /usr/local/bin/init.sh
              /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
          env:
            - name: AGENT_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: MYSQL_DATABASE
              value: chiwoosample
            - name: MYSQL_USER
              value: chiwoo
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: user-password
                  name: mysql-secret
            - name: MYSQL_REPLICATION_USER
              value: sync
            - name: MYSQL_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: sync-password
                  name: mysql-secret
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: root-password
                  name: mysql-secret
            - name: MYSQL_MASTER_SERVICE_HOST
              value: mysql-0
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-pvc
              subPathExpr: $(AGENT_NAME)/data
              readOnly: false
            - mountPath: /usr/local/bin/init.sh
              name: mysql-config
              subPath: init.sh
            - mountPath: /etc/mysql/conf.d/mysql.cnf.j2
              name: mysql-config
              subPath: my-cluster.cnf
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: mysql-config
          configMap:
            name: mysql-cm
            items:
              - key: init.sh
                path: init.sh
              - key: my-cluster.cnf
                path: my-cluster.cnf
  volumeClaimTemplates:
    - metadata:
        name: mysql-pvc
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ include "mysql.storageClassName" . }}
        resources:
          requests:
            storage: {{ .Values.volume.storage }}
        selector:
          matchLabels:
            {{- include "mysql.pvLabels" . | nindent 12 }}
